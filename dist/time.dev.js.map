{"version":3,"sources":["time.js"],"names":["timeToSeconds","hours","minutes","seconds","day","dayNumber","week","indexOf","time","secondsToTime","length","hoursAmount","minutesAmount","secondsAmount","toString","zero_first_format","currentDate","getDayNumber","getWeekDay","date","sunday","monday","tuesday","wednesday","thursday","friday","saturday","my_getWeekDay","value","currentTime","current_datetime","Date","getHours","getMinutes","getSeconds","getDay","currentTimeTest","s"],"mappings":"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","sourcesContent":["// All functons working with getting, converting currrent time and date\r\n\r\n\r\n\r\n// Convert time to seconds (from 8:01:01 to 28861)\r\nfunction timeToSeconds(hours, minutes, seconds, day) {\r\n    var dayNumber = week.indexOf(day);\r\n\r\n    // Converting time\r\n    let time = dayNumber * 24 * 3600 + hours * 3600 + minutes * 60 + seconds;\r\n    \r\n    return time;\r\n}\r\n\r\n// Convert time to usual format (from 28861 to 8:01:01) in two different lengths\r\nfunction secondsToTime(time, length) {\r\n\r\n    var hoursAmount = ~~(((time / 24) % 3600 * 24) / 3600) + (~~(time / 24 / 3600) * 24);\r\n    var minutesAmount = ~~((time % 3600) / 60);\r\n    var secondsAmount = ~~((time % 3600) % 60);\r\n\r\n    // Long format hours:minutes:seconds\r\n    if (length == 'long') {\r\n        if (hoursAmount == 0) {\r\n            return minutesAmount.toString() + ':' + zero_first_format(secondsAmount).toString();\r\n        }\r\n\r\n        return hoursAmount.toString() + ':' + zero_first_format(minutesAmount).toString() + ':' + zero_first_format(secondsAmount).toString();\r\n    }\r\n\r\n    // Long format minutes:seconds\r\n    if (length == 'short') {\r\n        return minutesAmount.toString() + ':' + zero_first_format(secondsAmount).toString();\r\n    }\r\n}\r\n\r\n\r\n// Getting dayNumber from time\r\nfunction currentDate(time) {\r\n    return (~~(time / 24 / 3600)) % 7;\r\n}\r\n\r\n// Replacing day object to day number (saturday -> '0')\r\nfunction getDayNumber(day) {\r\n    return dayNumber = week.indexOf(day);\r\n}\r\n\r\n// Replacing day number to day object ('0' -> saturday[obj]) (from current_datetime). Usual system, where sunday is the first day and saturday the last day of the week\r\nfunction getWeekDay(date) {\r\n    var week = [sunday, monday, tuesday, wednesday, thursday, friday, saturday];\r\n    return week[date];\r\n}\r\n\r\n// Replacing day number to day object ('0' -> saturday[obj]) (from seconds). My own system, where saturday is start of the week, and friday the end\r\nfunction my_getWeekDay(date) {\r\n    var week = [saturday, sunday, monday, tuesday, wednesday, thursday, friday];\r\n    return week[date];\r\n}\r\n\r\n// Changing '1' -> '01'\r\nfunction zero_first_format(value) {\r\n    if (value < 10) {\r\n        value='0'+value;\r\n    }\r\n    return value;\r\n}\r\n\r\n// Getting current time from device\r\nfunction currentTime() {\r\n\r\n    // Current time declaration\r\n    var current_datetime = new Date();\r\n    var hours = current_datetime.getHours();\r\n    var minutes = current_datetime.getMinutes();\r\n    var seconds = current_datetime.getSeconds();\r\n\r\n    // Comment for tests\r\n    var day = getWeekDay(current_datetime.getDay());\r\n\r\n    // Uncomment for tests\r\n    // return currentTimeTest();  \r\n\r\n    return timeToSeconds(hours, minutes, seconds, day);\r\n}\r\n\r\n// Seconds counter for tests \r\n{\r\n    var s = timeToSeconds(0, 0, 0, monday);\r\n    \r\n    function currentTimeTest() {\r\n        s += 20;\r\n        return s % 604800;\r\n    }\r\n}"],"file":"time.dev.js"}
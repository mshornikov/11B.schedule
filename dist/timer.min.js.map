{"version":3,"sources":["timer.js"],"names":["zero_first_format","value","getWeekDay","date","sunday","monday","tuesday","wednesday","thursday","friday","saturday","getDayNumber","day","dayNumber","week","indexOf","timeToSeconds","hours","minutes","seconds","secondsToTime","time","length","toString","whatLessonNow","current_datetime","getHours","getMinutes","getSeconds","estTime","i","get_lessons","get_startTime","get_time","get_endTime","nextLesson","get_name","Date","document","getElementById","innerHTML","setInterval","write","x","get_dayName","get_hours","get_minutes","est","type","whatLesson"],"mappings":"aACA,SAASA,kBAAkBC,GAEnBA,OAHRA,EAAA,KACAA,EAASD,IAAAA,GAEIC,EAGZ,SAEDC,WAAAC,GACA,MACe,CAACC,OAAQC,OAAQC,QAASC,UAAWC,SAAUC,OAAQC,UAD7DR,EAAWC,UAOpB,SAASQ,aAAaC,GAClB,OAAOC,UAAYC,KAAKA,KAAKC,QAAQH,IAIzC,SAASI,cAAcC,EAAOC,EAASC,EAASP,GAI5C,OAAuB,GAHPE,KAAKC,QAAQH,GAGD,KAAe,KAARK,EAAyB,GAAVC,EAAeC,EAMrE,SAASC,cAAcC,EAAMC,GACzB,MAAc,WAAVA,EACOtB,qBAA0BqB,EAAL,KAAqBE,KAAAA,WAGvC,WAAVD,EACOtB,qBAA0BqB,EAAL,KAAqBE,KAAAA,WAGvC,SAAVD,MACiBD,EAAS,GAAO,KAAM,GAAOE,OAAvCA,WAGG,QAAVD,EACiD,MAAhCD,EAAM,GAAO,KAAM,GAAU,SACxBA,EAAQ,KAAIE,IAArBA,WAAwCvB,IAAAA,qBAA6BqB,EAAV,KAAuBE,KAA3FA,eAGiBF,EAAM,GAAO,KAAM,GAAW,MAA5C,MAA4DA,EAAlB,GAA+BE,OAAaA,WAAMvB,IAAAA,qBAAqCqB,EAAKE,KAAtI,KAAAA,WAAyJvB,IAAAA,qBAAiBqB,EAAyBE,KAA1M,KAAAA,WAGU,SAAVD,KACeD,EAAL,KAAoBE,IAAAA,WAAmBvB,IAAAA,qBAA6BqB,EAAQ,KAAKE,KAA1CA,gBADrD,EAMJ,SAASC,gBAIL,IAAIP,EAAQQ,IAAiBC,KACzBR,EAAUO,EAAiBE,WAC3BR,EAAUM,EAAiBG,aAC3BhB,EAAMV,EAAWuB,aAAjBb,EAAMV,WAAWuB,EAAkBX,MAMnCF,EAAOF,cAAcO,EAAIb,EAAQe,EAAAP,GAArC,GAAIA,GAAOF,SAAWE,GAAOR,OACzB,MAAO,kCAAyCyB,QAAQ,WAOvD,IAAAC,KAAAlB,EAAAmB,cAAA,CAFD,GAAIV,GAAQT,EAAImB,cAAcD,GAAGE,gBAAgBC,WAAaZ,EAAOT,EAAImB,cAAcD,GAAGI,cAAcD,WAGhG,MAAJ,WAAmBF,EAAAA,cAAiBC,GAAAA,WAAgBC,iBAAYJ,QAAA,UAEnE,GAAAR,EAAA,MAAAT,EAAAmB,cAAAD,GAAAE,gBAAAC,WAIL,IAAAE,EAAAvB,EAAAmB,cAAAD,GAAAM,WACA,OAAIf,GAAQT,EAAImB,cAAcnB,EAAImB,cAAcT,OAAS,GAAGY,cAAcD,WAC/D,uCAA8CJ,QAAQ,WAI7DR,EAAO,GAAKT,EAAImB,cAAc,GAAGC,gBAAgBC,WAC1C,2CAA6CrB,EAAImB,cAAc,GAAGK,WAAa,iBAAmBP,QAAQ,WAUrH,6BAAAM,EAAA,gBAAAN,QAAA,SAIA,SAAIV,aAcJ,IAjBA,IAAIM,EAAmB,IAAIY,KAOvBhB,EAAOL,EAAaU,WALpBR,EAAUO,EAAiBE,aAQ1BR,EAALM,EAAyBM,aACjBV,EAAInB,WAAQ6B,EAAiBC,MAKrCX,EAAAL,cAAAC,EAAAC,EAAAC,EAAAP,GACAkB,EAAA,EAAAA,EAAAlB,EAAAmB,cAAAT,OAAAQ,IAGJ,GAAAT,GAAAT,EAAAmB,cAAAD,GAAAE,gBAAAC,WAAAZ,EAAAT,EAAAmB,cAAAD,GAAAI,cAAAD,WARY,OAAOrB,EAAImB,cAAcD,GA0BzBQ,IAAAA,KAjBZA,SAASC,eAAe,kBAAkBC,UAAYhB,gBAStDiB,YAAU3B,WACNwB,SAAIC,eAAiB,kBAAAC,UAAAhB,iBAEjBc,KAGIA,SAAAA,MAASI,2BACTJ,SAAAA,MAASI,sBACTJ,KACAA,GAAAA,GAAAA,EAAe,GAANI,EAAM,CAIlB,IAAAC,KAHGL,SAASI,MAAM,yBACfJ,SAASI,MAAM,+BAAf5B,KAAAgB,GAAAc,cAAA,cAEH9B,KAAAgB,GAAAC,cAPGO,SAASI,MAAM,iCASXJ,SAAOI,MAAA,sCAAf5B,KAAAgB,GAAAC,cAAAY,GAAAX,gBAAAa,YAAA,IAAA7C,kBAAAc,KAAAgB,GAAAC,cAAAY,GAAAX,gBAAAc,eAAA,cACHR,SAAAI,MAAA,mCACJJ,SAAAI,MAAA,gCAAA5B,KAAAgB,GAAAC,cAAAY,GAAAP,WAAA,cAPWE,SAASI,MAAM,oCAAqC5B,KAAKgB,GAAGC,cAAcY,GAAGT,cAAcW,YAAa,IAAK7C,kBAAkBc,KAAKgB,GAAGC,cAAcY,GAAGT,cAAcY,eAAgB,cAQzLJ,SAAMA,MAAf,cACSA,SAAMA,MAEf,cAEIJ,SAAAI,MAAA,cAQA,SAAIrB,aAGJ,IAAIT,EAAiB,IAAAyB,KACjBpB,EAAYH,EAAAY,WACfR,EAAAO,EAAAE,aATGR,EAAUM,EAAiBG,aAW3BhB,EAAOR,WAAQqB,EAAAX,MAPfO,EAAOL,cAAcC,EAAOC,EAASC,EAASP,GAa9C,GAAAA,GAAWF,SAGf,OAAAI,KAAAA,KAAAC,QAAAH,GAAA,GAAAmB,cAAA,GACA,GAAIV,GAAQT,OACR,OAAWmB,KAAAA,KAAAA,QAAXnB,GAAA,GAAAmB,cAAA,GAIJ,GAAKV,GAAKT,EAAOkB,cAAQC,EAAAA,cAAsBD,OAAI,GAAAI,cAAAD,WAC3CZ,OAAIP,KAAQiB,KAAAA,QAAJnB,GAAqBoB,GAAAA,cAAgBC,GAGjD,GAAIZ,GAAOT,EAAPmB,cAAmBA,GAAAA,gBAAiBC,WACpC,OAAIG,EAAAA,cAAiBJ,GAL7B,IAAK,IAAID,EAAI,EAAIA,EAAIlB,EAAImB,cAAcT,OAAQQ,IAAI,CAUnD,GAAOK,GAAPvB,EAAAmB,cAAAD,GAAAE,gBAAAC,WAAAZ,GAAAT,EAAAmB,cAAAD,GAAAI,cAAAD,WAGJ,OAAArB,EAAAmB,cAAAD,EAAA,GATQ,GAAIT,EAAO,MAAQT,EAAImB,cAAcD,GAAGE,gBAAgBC,WAUvDJ,IAATM,EAAuBvB,EAAAmB,cAAAD,GAMnB,OAAIX,EAKJ,SAAIE,QAAOL,GAGP,IAAI+B,EAAmBf,IAAAA,KAO1BX,EAAAL,cANUI,EAAoBC,WAC9BI,EAAAE,aAVaF,EAAiBG,aAWnB1B,WAAUuB,EAAAX,OAKtB,MAAY,SAARkC,EAPO5B,cAQGe,aAAaH,gBAAgBC,WARZZ,EAAM,SAUpC,UAAA2B,EALU5B,cAMd6B,aAAAf,cAAAD,WANkCZ,EAAM,SAEzB,WAAR2B,EAEO5B,cADGe,aAAaH,gBAAgBC,WACZZ,EAAM,aAFrC,EA/DAiB,SAAIpB,MAAO,UACXoB,SAAInB,MAAO","file":"timer.min.js","sourcesContent":["// Function which changing '1' -> '01'\r\nfunction zero_first_format(value) {\r\n    if (value < 10) {\r\n        value='0'+value;\r\n    }\r\n    return value;\r\n}\r\n\r\n// Function which replacing day number to day object ('0' -> saturday)\r\nfunction getWeekDay(date) {    \r\n    var week = [sunday, monday, tuesday, wednesday, thursday, friday, saturday]\r\n\r\n    return week[date.getDay()];\r\n    }\r\n\r\n// Function which replacing day object to day number (saturday -> '0')\r\nfunction getDayNumber(day) {\r\n    return dayNumber = week[week.indexOf(day)];\r\n}\r\n\r\n// Function which convert time from 8:01:01 to 28861 for comparing\r\nfunction timeToSeconds(hours, minutes, seconds, day) {\r\n    var dayNumber = week.indexOf(day);\r\n\r\n    // Converting time from 8:01:01 to 28861 for comparing\r\n    let time = dayNumber * 24 * 3600 + hours * 3600 + minutes * 60 + seconds;\r\n    return time;\r\n}\r\n\r\n\r\n// Function which convert time from 28861 to 8:01:01 for output\r\nfunction secondsToTime(time, length) {\r\n    if (length == 'seconds') {\r\n        return zero_first_format(~~((time % 3600) % 60)).toString();\r\n    }\r\n\r\n    if (length == 'minutes') {\r\n        return zero_first_format(~~((time % 3600) / 60)).toString();\r\n    }\r\n\r\n    if (length == 'hours') {\r\n        return (~~(((time / 24) % 3600 * 24) / 3600)).toString();\r\n    }\r\n\r\n    if (length == 'long') {\r\n        if ((~~(((time / 24) % 3600 * 24) / 3600)) == 0) {\r\n            return ~~((time % 3600) / 60).toString() + ':' + zero_first_format(~~((time % 3600) % 60)).toString();\r\n        }\r\n\r\n        return ((~~(((time / 24) % 3600 * 24) / 3600)) + (~~((time / 24) / 3600)) * 24).toString() + ':' + zero_first_format(~~((time % 3600) / 60)).toString() + ':' + zero_first_format(~~((time % 3600) % 60)).toString();\r\n    }\r\n\r\n    if (length == 'short') {\r\n        return ~~((time % 3600) / 60).toString() + ':' + zero_first_format(~~((time % 3600) % 60)).toString();\r\n    }\r\n}\r\n\r\n// Function whic by current time understands what lesson now\r\nfunction whatLessonNow() {\r\n\r\n    // Current time declaration\r\n    var current_datetime = new Date();\r\n    var hours = current_datetime.getHours();\r\n    var minutes = current_datetime.getMinutes();\r\n    var seconds = current_datetime.getSeconds();\r\n    var day = getWeekDay(current_datetime, week);\r\n\r\n    // Converting time from 8:01:01 to 28861 for comparing\r\n    let time = timeToSeconds(hours, minutes, seconds, day);\r\n\r\n    // Weekend\r\n    if (day == saturday | day == sunday) {\r\n        return 'Сегодня выходной' + '<br>До уроков: ' + estTime('weekend');\r\n    }\r\n\r\n    // Loop which\r\n    for (i in day.get_lessons()){\r\n        if (time >= day.get_lessons()[i].get_startTime().get_time() & time < day.get_lessons()[i].get_endTime().get_time()) {\r\n            return 'Сейчас: ' + day.get_lessons()[i].get_name() + '<br> Осталось ' + estTime('lesson');\r\n        }\r\n        if (time + 1200 >= day.get_lessons()[i].get_startTime().get_time()) {\r\n            var nextLesson = day.get_lessons()[i].get_name();\r\n        }\r\n    }\r\n\r\n\r\n    // Time after lessons ('15:00')\r\n    if (time >= day.get_lessons()[day.get_lessons().length - 1].get_endTime().get_time() ) {\r\n        return 'Уроки уже закончились' + '<br>До уроков: ' + estTime('weekend');\r\n    }\r\n\r\n    // Time before lessons ('8:14')\r\n    if (time + 1 <= day.get_lessons()[0].get_startTime().get_time()) {\r\n        return 'Уроки ещё не начались. <br>Первый урок: ' + day.get_lessons()[0].get_name() + '<br>До урока: ' + estTime('weekend');\r\n    }\r\n\r\n\r\n    // Break\r\n    return 'Перемена. Cледующий урок: ' + nextLesson + '<br>До урока ' + estTime('break');\r\n\r\n}\r\n\r\nfunction whatLesson() {\r\n    // Current time declaration\r\n    var current_datetime = new Date();\r\n    var hours = current_datetime.getHours();\r\n    var minutes = current_datetime.getMinutes();\r\n    var seconds = current_datetime.getSeconds();\r\n    var day = getWeekDay(current_datetime, week);\r\n\r\n    // Converting time from 8:01:01 to 28861 for comparing\r\n    let time = timeToSeconds(hours, minutes, seconds, day);\r\n\r\n    // Loop which\r\n    for (let i = 0;  i < day.get_lessons().length; i++){\r\n        if (time >= day.get_lessons()[i].get_startTime().get_time() & time < day.get_lessons()[i].get_endTime().get_time()) {\r\n            return day.get_lessons()[i];\r\n        }\r\n    }\r\n    \r\n    // Break\r\n    return;\r\n}\r\n\r\n// Updating status in header\r\ndocument.getElementById('current_status').innerHTML = whatLessonNow();\r\nsetInterval(function () {\r\n    document.getElementById('current_status').innerHTML = whatLessonNow();\r\n    // document.getElementById('est').innerHTML = estTime('lesson');\r\n}, 1000);\r\n\r\n// Document writing\r\ndocument.write('<div class=\"container\">');\r\ndocument.write('<div class=\"week\">');\r\nfor (i in week) {\r\n    if (i != 0 & i != 1) {\r\n        document.write('<article class=\"day\">');\r\n        document.write('<section class=\"day-header\">', week[i].get_dayName(), '</section>');\r\n        \r\n        for (x in week[i].get_lessons()) {\r\n            document.write('<section class=\"lesson-line\">');\r\n            document.write('<section class=\"lesson-start-time\">', week[i].get_lessons()[x].get_startTime().get_hours(), ':', zero_first_format(week[i].get_lessons()[x].get_startTime().get_minutes()), '</section>');\r\n            document.write('<section class=\"lesson-column\">');\r\n            document.write('<section class=\"lesson-name\">', week[i].get_lessons()[x].get_name(), '</section>');\r\n            document.write('<section class=\"lesson-end-time\">', week[i].get_lessons()[x].get_endTime().get_hours(), ':', zero_first_format(week[i].get_lessons()[x].get_endTime().get_minutes()), '</section>');\r\n            document.write('</section>');\r\n            document.write('</section>');\r\n        }\r\n\r\n        document.write('</article>');\r\n    }\r\n} \r\ndocument.write('</div>');\r\ndocument.write('</div>');\r\n\r\n// Function which understand which lesson is next\r\nfunction nextLesson() {\r\n    // Current time declaration\r\n    var current_datetime = new Date();\r\n    var hours = current_datetime.getHours();\r\n    var minutes = current_datetime.getMinutes();\r\n    var seconds = current_datetime.getSeconds();\r\n    var day = getWeekDay(current_datetime, week);\r\n\r\n    // Converting time from 8:01:01 to 28861 for comparing\r\n    let time = timeToSeconds(hours, minutes, seconds, day);\r\n\r\n    // Weekend\r\n    if (day == saturday) {\r\n        return week[week.indexOf(day) + 2].get_lessons()[0];\r\n    }\r\n\r\n    if (day == sunday) {\r\n        return week[week.indexOf(day) + 1].get_lessons()[0];\r\n    }\r\n\r\n    // Time after lessons ('15:00')\r\n    if (time >= day.get_lessons()[day.get_lessons().length - 1].get_endTime().get_time() ) {\r\n        return week[week.indexOf(day) + 1].get_lessons()[0];\r\n    }\r\n\r\n    // Time before lessons ('8:14')\r\n    if (time <= day.get_lessons()[0].get_startTime().get_time()) {\r\n        return day.get_lessons()[0];\r\n    }\r\n\r\n    // Loop which\r\n    for (let i = 0;  i < day.get_lessons().length; i++){\r\n        if (time >= day.get_lessons()[i].get_startTime().get_time() & time <= day.get_lessons()[i].get_endTime().get_time()) {\r\n            return day.get_lessons()[i+1];\r\n        }\r\n        if (time + 1200 >= day.get_lessons()[i].get_startTime().get_time()) {\r\n            var nextLesson = day.get_lessons()[i];\r\n        }\r\n    }\r\n    \r\n    // Break\r\n    return nextLesson;\r\n}\r\n\r\n// Function which counting estimated time to the next lesson\r\nfunction estTime(type) {\r\n\r\n    // Current time declaration\r\n    var current_datetime = new Date();\r\n    var hours = current_datetime.getHours();\r\n    var minutes = current_datetime.getMinutes();\r\n    var seconds = current_datetime.getSeconds();\r\n    var day = getWeekDay(current_datetime, week);\r\n\r\n    // Converting time from 8:01:01 to 28861 for comparing\r\n    // var time = timeToSeconds(hours, minutes, seconds, day);\r\n    var time = timeToSeconds(hours, minutes, seconds, day);\r\n\r\n    if (type == 'break') {\r\n        let est = nextLesson().get_startTime().get_time();\r\n        return secondsToTime(est - time, 'short');\r\n    }\r\n    if (type == 'lesson') {\r\n        let est = whatLesson().get_endTime().get_time();\r\n\r\n        return secondsToTime(est - time, 'short');\r\n    }\r\n    if (type == 'weekend') {\r\n        let est = nextLesson().get_startTime().get_time();\r\n        return secondsToTime(est - time, 'long');\r\n    }\r\n}"]}
{"version":3,"sources":["timer.js"],"names":["whatLessonNow","time","day","saturday","currentDate","sunday","lesson","get_startTime","get_lessons","i","get_time","get_endTime","length","currentStatus","document","getElementById","innerHTML","status","get_name","estTime","style","margin","nextLesson","get_additionalName","toString","dayNumber","my_getWeekDay","week","maxBreakLength","friday","get_lessonAmount","next_lesson","type","secondsToTime","est","timeToSeconds","setInterval","currentTime"],"mappings":"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","file":"timer.min.js","sourcesContent":["// Tracking current lesson and next lesson. And giving it to the page. Counting estimated time ti the next lesson\r\n\r\n\r\n\r\n// Getting current lesson (object)\r\nfunction whatLessonNow(time) {\r\n\r\n    // Getting current time and day (in object)\r\n    var day = my_getWeekDay(currentDate(time));\r\n\r\n    // Weekend case\r\n    if (day == saturday | day == sunday) {\r\n        return 'weekend';\r\n    }\r\n\r\n    // Loop that running at lessons array and getting current lesson\r\n    for (i in day.get_lessons()){\r\n\r\n        let lesson = day.get_lessons()[i];\r\n\r\n        if (time >= lesson.get_startTime().get_time() & time <= lesson.get_endTime().get_time()) {\r\n            return lesson;\r\n        }\r\n    }\r\n\r\n    // Time after lessons ('15:00') case\r\n    if (time >= day.get_lessons()[day.get_lessons().length - 1].get_endTime().get_time() ) {\r\n        return 'after';\r\n    }\r\n\r\n    // Time before lessons ('8:14') case\r\n    if (time + 1 <= day.get_lessons()[0].get_startTime().get_time()) {\r\n        return 'before';\r\n    }\r\n\r\n    // Break case\r\n    return 'break';\r\n}\r\n\r\n// Creating output from current status\r\nfunction currentStatus(status, time) {\r\n\r\n    // lesson\r\n    if (toString.call(status) == '[object Object]') {\r\n        document.getElementById('current_subtitle').innerHTML = 'Сейчас';\r\n        document.getElementById('current_status').innerHTML = status.get_name();\r\n        document.getElementById('current_time_name').innerHTML = 'Осталось';\r\n        document.getElementById('current_time').innerHTML = estTime('lesson', time);\r\n        document.getElementById('week').style.margin = '110px 0 0 0';\r\n    }\r\n\r\n    // break\r\n    if (status == 'break') {\r\n        document.getElementById('current_subtitle').innerHTML = 'Сейчас';\r\n        document.getElementById('current_status').innerHTML = 'Перемена';\r\n        document.getElementById('current_time_name').innerHTML = 'До ' + nextLesson(time).get_additionalName();\r\n        document.getElementById('current_time').innerHTML = estTime('break', time);\r\n        document.getElementById('week').style.margin = '120px 0 0 0';\r\n    }\r\n\r\n    // time before lessons\r\n    if (status == 'before') {\r\n        document.getElementById('current_subtitle').innerHTML = 'Сейчас';\r\n        document.getElementById('current_status').innerHTML = 'Уроки ещё не начались';\r\n        document.getElementById('current_time_name').innerHTML = 'До ' + nextLesson(time).get_additionalName();\r\n        document.getElementById('current_time').innerHTML = estTime('before', time);\r\n        document.getElementById('week').style.margin = '150px 0 0 0';\r\n    }\r\n\r\n    // time after lessons\r\n    if (status == 'after') {\r\n        document.getElementById('current_subtitle').innerHTML = 'Сейчас';\r\n        document.getElementById('current_status').innerHTML = 'Уроки уже закончились';\r\n        document.getElementById('current_time_name').innerHTML = 'До ' + nextLesson(time).get_additionalName();\r\n        document.getElementById('current_time').innerHTML = estTime('after', time);\r\n        document.getElementById('week').style.margin = '150px 0 0 0';\r\n    }\r\n\r\n    // weekend\r\n    if (status == 'weekend') {\r\n        document.getElementById('current_subtitle').innerHTML = 'Сегодня';\r\n        document.getElementById('current_status').innerHTML = 'Выходной';\r\n        document.getElementById('current_time_name').innerHTML = 'До уроков:';\r\n        document.getElementById('current_time').innerHTML = estTime('before', time).toString();\r\n        document.getElementById('week').style.margin = '120px 0 0 0';\r\n    }\r\n}\r\n\r\n// Function which understand which lesson is the next\r\nfunction nextLesson(time) {\r\n\r\n    var day = my_getWeekDay(currentDate(time));\r\n\r\n    let dayNumber = getDayNumber(day);\r\n\r\n    // Weekend\r\n    if (day == saturday) {\r\n        return week[dayNumber + 2].get_lessons()[0];\r\n    }\r\n\r\n    if (day == sunday) {\r\n        return week[dayNumber + 1].get_lessons()[0];\r\n    }\r\n\r\n    // Time after lessons ('15:00') at the end of the day\r\n    if (time >= day.get_lessons()[day.get_lessons().length - 1].get_endTime().get_time() ) {\r\n\r\n        // exclusion for friday (next lesson is the first lesson at monday)\r\n        if (day == friday) {\r\n            return week[2].get_lessons()[0];\r\n        }\r\n        return week[dayNumber + 1].get_lessons()[0];\r\n    }\r\n\r\n    // Time before lessons ('8:14') at the start of the day\r\n    if (time <= day.get_lessons()[0].get_startTime().get_time()) {\r\n        return day.get_lessons()[0];\r\n    }\r\n\r\n    // Loop that running at lessons array and getting next lesson\r\n    for (let i = 0;  i < day.get_lessons().length; i++){\r\n        \r\n        var lesson = day.get_lessons()[i];\r\n        var maxBreakLength = 1200; // in seconds\r\n\r\n        if (time >= lesson.get_startTime().get_time() & time <= lesson.get_endTime().get_time()) {\r\n\r\n            // exclusion for last lesson at friday\r\n            if (day == friday & lesson == day.get_lessons(day.get_lessonAmount() - 1)) {\r\n                return week[0].get_lessons()[0];\r\n            }\r\n            return day.get_lessons()[i+1];\r\n        }\r\n        if (time + maxBreakLength >= lesson.get_startTime().get_time()) {\r\n            var next_lesson = lesson;\r\n        }\r\n    }\r\n    \r\n    // Break\r\n    return next_lesson;\r\n}\r\n\r\n// Counting estimated time to the next lesson\r\nfunction estTime(type, time) {\r\n\r\n    var day = my_getWeekDay(currentDate(time)); // getting current day for friday check\r\n\r\n    // estimated time to break end\r\n    if (type == 'break') {\r\n        let est = nextLesson(time).get_startTime().get_time();\r\n        return secondsToTime(est - time, 'short');\r\n    }\r\n\r\n    // estimated time to lesson end\r\n    if (type == 'lesson') {\r\n        let est = whatLessonNow(time).get_endTime().get_time();\r\n        return secondsToTime(est - time, 'short');\r\n    }\r\n\r\n    // estimated time to the start of first lesson today\r\n    if (type == 'before') {\r\n        let est = nextLesson(time).get_startTime().get_time();\r\n        return secondsToTime(est - time, 'long');\r\n    }\r\n\r\n    // estimated time to the start of first lesson tomorrow\r\n    if (type == 'after') {\r\n        let est = nextLesson(time).get_startTime().get_time();\r\n        if (day == friday) {\r\n            return secondsToTime(est + timeToSeconds(24, 0, 0, friday) - time, 'long');\r\n        }\r\n        return secondsToTime(est - time, 'long');\r\n    }\r\n}   \r\n\r\n\r\n// Updating status in header\r\n\r\n// For fast download of web page\r\nlet time = currentTime();\r\ncurrentStatus(whatLessonNow(time), time);\r\n\r\n// timer for every second update\r\nsetInterval(function () {\r\n\r\n    // Getting current time\r\n    let time = currentTime();\r\n\r\n    currentStatus(whatLessonNow(time), time);\r\n\r\n}, 1000);"]}